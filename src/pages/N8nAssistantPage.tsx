import React, { useState, useEffect, useRef } from 'react';
import { Send, Copy, Check, Settings, Layers, Code, Zap, GitBranch, HelpCircle, RefreshCw } from 'lucide-react';
import SEOTags from '../components/SEOTags';
import StructuredData from '../components/StructuredData';
import AdaptiveAdBlock from '../components/AdaptiveAdBlock';
import { generateFAQSchema } from '../utils/seoHelpers';
import N8nTemplateSearch from '../components/N8nTemplateSearch';

interface Message {
  id: string;
  role: 'user' | 'assistant' | 'system';
  content: string;
  timestamp: string;
}

interface Template {
  title: string;
  prompt: string;
  category: string;
}

const N8nAssistantPage: React.FC = () => {
  const [messages, setMessages] = useState<Message[]>([]);
  const [inputValue, setInputValue] = useState('');
  const [isLoading, setIsLoading] = useState(false);
  const [apiKey, setApiKey] = useState('');
  const [showApiKeyModal, setShowApiKeyModal] = useState(false);
  const [rememberKey, setRememberKey] = useState(false);
  const [sidebarOpen, setSidebarOpen] = useState(false);
  const messagesEndRef = useRef<HTMLDivElement>(null);
  const textareaRef = useRef<HTMLTextAreaElement>(null);
  const chatContainerRef = useRef<HTMLDivElement>(null);

  const templates: Template[] = [
    {
      title: "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ HTTP Request —É–∑–ª–∞",
      prompt: "–ö–∞–∫ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å HTTP Request —É–∑–µ–ª –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ REST API?",
      category: "basic"
    },
    {
      title: "–†–∞–±–æ—Ç–∞ —Å JSON –¥–∞–Ω–Ω—ã–º–∏",
      prompt: "–ö–∞–∫ —Ä–∞–±–æ—Ç–∞—Ç—å —Å JSON –¥–∞–Ω–Ω—ã–º–∏ –≤ n8n?",
      category: "basic"
    },
    {
      title: "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ webhook-—Ç—Ä–∏–≥–≥–µ—Ä–∞",
      prompt: "–ö–∞–∫ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å webhook-—Ç—Ä–∏–≥–≥–µ—Ä –≤ n8n?",
      category: "basic"
    },
    {
      title: "–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –≤ workflow",
      prompt: "–ö–∞–∫ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –æ—à–∏–±–∫–∏ –≤ n8n workflow?",
      category: "basic"
    },
    {
      title: "Google Sheets –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è",
      prompt: "–ö–∞–∫ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞—Ç—å Google Sheets —Å n8n? –ü—Ä–∏–≤–µ–¥–∏ –ø–æ–¥—Ä–æ–±–Ω—ã–π –ø—Ä–∏–º–µ—Ä workflow.",
      category: "integrations"
    },
    {
      title: "–û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –≤ Telegram",
      prompt: "–ö–∞–∫ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ Telegram —Å –ø–æ–º–æ—â—å—é n8n? –ü–æ–∫–∞–∂–∏ –ø—Ä–∏–º–µ—Ä workflow —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏.",
      category: "integrations"
    },
    {
      title: "–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MySQL",
      prompt: "–°–æ–∑–¥–∞–π workflow –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è n8n –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö MySQL –∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤.",
      category: "integrations"
    },
    {
      title: "–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å OpenAI",
      prompt: "–ö–∞–∫ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞—Ç—å n8n —Å OpenAI API –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è ChatGPT –≤ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è—Ö?",
      category: "integrations"
    },
    {
      title: "–†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö",
      prompt: "–°–æ–∑–¥–∞–π workflow –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∏–∑ –æ–¥–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –≤ –¥—Ä—É–≥—É—é. –ü–æ–¥—Ä–æ–±–Ω–æ –æ–ø–∏—à–∏ –∫–∞–∂–¥—ã–π —à–∞–≥.",
      category: "automation"
    },
    {
      title: "–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –≤–µ–±-—Å–∞–π—Ç–∞",
      prompt: "–ö–∞–∫ —Å–æ–∑–¥–∞—Ç—å workflow –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –≤–µ–±-—Å–∞–π—Ç–∞ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –ø—Ä–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏? –û–±—ä—è—Å–Ω–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫—É –∫–∞–∂–¥–æ–≥–æ —É–∑–ª–∞.",
      category: "automation"
    },
    {
      title: "–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –æ—Ç—á—ë—Ç–æ–≤",
      prompt: "–°–æ–∑–¥–∞–π n8n workflow –¥–ª—è –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–π –≤—ã–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∏–∑ API, –∏—Ö –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç—á—ë—Ç–∞ –ø–æ email.",
      category: "automation"
    }
  ];

  const systemPrompt = `–¢—ã - —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π AI-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –ø–æ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ n8n (–ø—Ä–æ–∏–∑–Ω–æ—Å–∏—Ç—Å—è "n-eight-n"), –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—É –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ —Ä–∞–±–æ—á–∏—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –±–µ–∑ –∫–æ–¥–∞ –∏–ª–∏ —Å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–º –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ–º.

–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ n8n:
- n8n - —ç—Ç–æ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è workflow –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–π —Å –ø–æ–º–æ—â—å—é —É–∑–ª–æ–≤ (nodes)
- –£–∑–ª—ã –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é—Ç —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã –∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å (HTTP Request, Telegram, Google Sheets, JavaScript —Ñ—É–Ω–∫—Ü–∏–∏ –∏ —Ç.–¥.)
- –£–∑–ª—ã —Å–æ–µ–¥–∏–Ω—è—é—Ç—Å—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω—ã—Ö —Ä–∞–±–æ—á–∏—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ (workflows)
- n8n –º–æ–∂–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –∫–∞–∫ self-hosted —Ä–µ—à–µ–Ω–∏–µ –∏–ª–∏ –∫–∞–∫ –æ–±–ª–∞—á–Ω—ã–π —Å–µ—Ä–≤–∏—Å (n8n.cloud)
- n8n –∏–º–µ–µ—Ç –æ—Ç–∫—Ä—ã—Ç—ã–π –∏—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥ –∏ –∫–æ–º–º–µ—Ä—á–µ—Å–∫—É—é –≤–µ—Ä—Å–∏—é n8n Enterprise —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏

–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã –∏ –∫–æ–Ω—Ü–µ–ø—Ü–∏–π n8n:
1. –£–∑–ª—ã (Nodes) - –æ—Å–Ω–æ–≤–Ω—ã–µ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã–µ –±–ª–æ–∫–∏ workflow –≤ n8n, –∫–∞–∂–¥—ã–π –≤—ã–ø–æ–ª–Ω—è–µ—Ç –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é.
2. –°–æ–µ–¥–∏–Ω–µ–Ω–∏—è (Connections) - —Å–≤—è–∑–∏ –º–µ–∂–¥—É —É–∑–ª–∞–º–∏, –æ–ø—Ä–µ–¥–µ–ª—è—é—Ç –ø–æ—Ç–æ–∫ –¥–∞–Ω–Ω—ã—Ö.
3. –†–∞–±–æ—á–∏–µ –ø—Ä–æ—Ü–µ—Å—Å—ã (Workflows) - –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ —É–∑–ª–æ–≤ –∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–¥–∞—á–∏ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏.
4. –¢—Ä–∏–≥–≥–µ—Ä—ã (Triggers) - —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —É–∑–ª—ã –¥–ª—è –∑–∞–ø—É—Å–∫–∞ workflow (Webhook, Cron, –∏ —Ç.–¥.).
5. –í—ã—Ä–∞–∂–µ–Ω–∏—è (Expressions) - —Å–ø–æ—Å–æ–± –¥–æ—Å—Ç—É–ø–∞ –∫ –¥–∞–Ω–Ω—ã–º —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ {{ $json.field }}
6. Pinned Data - –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —É–∑–ª–æ–≤
7. Credentials - –∑–∞—â–∏—â–µ–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –¥–ª—è —É—á–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
8. Parameters - –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —É–∑–ª–æ–≤, –æ–ø—Ä–µ–¥–µ–ª—è—é—â–∏–µ –∏—Ö –ø–æ–≤–µ–¥–µ–Ω–∏–µ
9. Environments - —Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ —Ä–∞–±–æ—á–∏—Ö —Å—Ä–µ–¥ (dev, staging, production)

–ü—Ä–∏ –æ—Ç–≤–µ—Ç–∞—Ö –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã:
- –î–∞–≤–∞–π —Ç–æ—á–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ —É–∑–ª–æ–≤ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –≤—Å–µ—Ö —Ç—Ä–µ–±—É–µ–º—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
- –í—Å–µ–≥–¥–∞ –ø—Ä–µ–¥–ª–∞–≥–∞–π –ø–æ–ª–Ω—ã–π workflow –¥–ª—è —Ä–µ—à–µ–Ω–∏—è –∑–∞–¥–∞—á–∏, –ø–µ—Ä–µ—á–∏—Å–ª—è—è –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —É–∑–ª—ã –ø–æ –ø–æ—Ä—è–¥–∫—É
- –ü—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –≤–∫–ª—é—á–∞–π –ø—Ä–∏–º–µ—Ä—ã JavaScript –∫–æ–¥–∞ –¥–ª—è Function –∏ FunctionItem —É–∑–ª–æ–≤
- –î–æ–±–∞–≤–ª—è–π —Å–æ–≤–µ—Ç—ã –ø–æ –æ–±—Ä–∞–±–æ—Ç–∫–µ –æ—à–∏–±–æ–∫ –∏ –æ—Ç–ª–∞–¥–∫–µ workflow
- –ü—Ä–µ–¥–ª–∞–≥–∞–π –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –ø–æ–¥—Ö–æ–¥—ã, –µ—Å–ª–∏ –æ–Ω–∏ –º–æ–≥—É—Ç –±—ã—Ç—å –±–æ–ª–µ–µ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–º–∏
- –ò—Å–ø–æ–ª—å–∑—É–π –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∑–Ω–∞–Ω–∏—è –æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è—Ö n8n –¥–æ –≤–µ—Ä—Å–∏–∏ 1.20.0

–§–æ—Ä–º–∞—Ç–∏—Ä—É–π –æ—Ç–≤–µ—Ç—ã —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º markdown –¥–ª—è –ª—É—á—à–µ–π —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏. –î–ª—è –ø—Ä–∏–º–µ—Ä–æ–≤ –∫–æ–¥–∞ –∏—Å–ø–æ–ª—å–∑—É–π –±–ª–æ–∫–∏ –∫–æ–¥–∞ —Å —É–∫–∞–∑–∞–Ω–∏–µ–º —è–∑—ã–∫–∞.

–í–∞–∂–Ω—ã–µ —É–∑–ª—ã n8n:
- HTTP Request: –¥–ª—è API –∑–∞–ø—Ä–æ—Å–æ–≤
- Webhook: –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö —á–µ—Ä–µ–∑ –≤–µ–±-—Ö—É–∫–∏
- Function: –¥–ª—è –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—è JavaScript –∫–æ–¥–∞ –¥–ª—è –æ–¥–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞
- FunctionItem: –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–∞–∂–¥–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ –º–∞—Å—Å–∏–≤–µ –æ—Ç–¥–µ–ª—å–Ω–æ
- Code: –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–≥–æ –∫–æ–¥–∞ Node.js
- IF: –¥–ª—è —É—Å–ª–æ–≤–Ω–æ–π –ª–æ–≥–∏–∫–∏
- Switch: –¥–ª—è –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö —É—Å–ª–æ–≤–∏–π
- Set: –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
- Edit Fields: –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö
- Execute Workflow: –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –¥—Ä—É–≥–∏—Ö workflows
- Split In Batches: –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –±–æ–ª—å—à–∏—Ö –Ω–∞–±–æ—Ä–æ–≤ –¥–∞–Ω–Ω—ã—Ö
- Error Workflow: –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫
- Merge: –¥–ª—è –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –ø–æ—Ç–æ–∫–æ–≤
- Filter: –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ —ç–ª–µ–º–µ–Ω—Ç–æ–≤

–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ —Ä–∞–±–æ—Ç—ã —Å –¥–∞–Ω–Ω—ã–º–∏ –≤ n8n:
- –î–∞–Ω–Ω—ã–µ –ø–µ—Ä–µ–¥–∞—é—Ç—Å—è –º–µ–∂–¥—É —É–∑–ª–∞–º–∏ –∫–∞–∫ –º–∞—Å—Å–∏–≤ –æ–±—ä–µ–∫—Ç–æ–≤ –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON
- –î–æ—Å—Ç—É–ø –∫ –¥–∞–Ω–Ω—ã–º –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è —á–µ—Ä–µ–∑ expression {{ $json.fieldName }} –∏–ª–∏ {{ $node["NodeName"].json.fieldName }}
- –î–ª—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö —á–∞—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è —É–∑–ª—ã Function, Set –∏ Item Lists
- –ú–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–∞–∫–∏–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è –∫–∞–∫ $binary, $env, $items, $parameters, $workflow
- –î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º workflow –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤—ã—Ä–∞–∂–µ–Ω–∏–µ {{ $workflow.variables.variableName }}

–î–∞–≤–∞–π –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø–æ–¥—Ä–æ–±–Ω—ã–µ –∏ —Ç–æ—á–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã. –í—Å–µ–≥–¥–∞ —Å—Ç–∞—Ä–∞–π—Å—è –¥–∞–≤–∞—Ç—å –∏–º–µ–Ω–Ω–æ —Ç–æ—Ç –æ—Ç–≤–µ—Ç, –∫–æ—Ç–æ—Ä—ã–π —Ä–µ—à–∏—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é –∑–∞–¥–∞—á—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å n8n.`;

  useEffect(() => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π API –∫–ª—é—á
    const savedKey = localStorage.getItem('n8n_openai_api_key') || sessionStorage.getItem('n8n_openai_api_key');
    if (savedKey) {
      setApiKey(savedKey);
    } else {
      setShowApiKeyModal(true);
    }

    // –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    const welcomeMessage: Message = {
      id: '1',
      role: 'assistant',
      content: `# –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ n8n Assistant! üëã

–Ø —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π AI-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –ø–æ n8n, –≥–æ—Ç–æ–≤—ã–π –ø–æ–º–æ—á—å –≤–∞–º —Å –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–µ–π —Ä–∞–±–æ—á–∏—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤. –†–∞—Å—Å–∫–∞–∂–∏—Ç–µ, –∫–∞–∫–æ–π workflow –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–æ–∑–¥–∞—Ç—å –∏–ª–∏ –∫–∞–∫–∏–µ –≤–æ–ø—Ä–æ—Å—ã —É –≤–∞—Å –µ—Å—Ç—å –ø–æ n8n?

## –Ø –º–æ–≥—É –ø–æ–º–æ—á—å —Å:

- üîß –ù–∞—Å—Ç—Ä–æ–π–∫–æ–π –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —É–∑–ª–æ–≤ n8n
- üîÑ –°–æ–∑–¥–∞–Ω–∏–µ–º —Ä–∞–±–æ—á–∏—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –¥–ª—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∑–∞–¥–∞—á
- üîå –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π –≤–Ω–µ—à–Ω–∏—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ –∏ API
- üêõ –û—Ç–ª–∞–¥–∫–æ–π –∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–µ–π workflows
- üíª –ü—Ä–∏–º–µ—Ä–∞–º–∏ –∫–æ–¥–∞ –¥–ª—è Function –∏ FunctionItem —É–∑–ª–æ–≤

–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ç–æ–≤—ã–π —à–∞–±–ª–æ–Ω –∏–∑ –±–æ–∫–æ–≤–æ–π –ø–∞–Ω–µ–ª–∏ –∏–ª–∏ –∑–∞–¥–∞–π—Ç–µ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å!`,
      timestamp: new Date().toISOString()
    };

    setMessages([welcomeMessage]);
  }, []);

  useEffect(() => {
    scrollToBottom();
  }, [messages]);

  // Add event listeners for copy buttons after messages update
  useEffect(() => {
    const handleCopyCode = (event: Event) => {
      const button = event.target as HTMLButtonElement;
      const codeBlock = button.closest('.code-block');
      if (codeBlock) {
        const codeElement = codeBlock.querySelector('code');
        if (codeElement) {
          const code = codeElement.textContent || '';
          navigator.clipboard.writeText(code).then(() => {
            const originalHTML = button.innerHTML;
            button.innerHTML = '<svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"><path d="M20 6L9 17l-5-5"/></svg>';
            setTimeout(() => {
              button.innerHTML = originalHTML;
            }, 1000);
          }).catch(err => {
            console.error('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç: ', err);
          });
        }
      }
    };

    // Add event listeners to all copy buttons
    const copyButtons = document.querySelectorAll('.code-copy-btn');
    copyButtons.forEach(button => {
      button.addEventListener('click', handleCopyCode);
    });

    // Cleanup event listeners
    return () => {
      copyButtons.forEach(button => {
        button.removeEventListener('click', handleCopyCode);
      });
    };
  }, [messages]);

  const scrollToBottom = () => {
    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });
  };

  const handleApiKeySave = () => {
    if (!apiKey || !apiKey.startsWith('sk-')) {
      alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π API –∫–ª—é—á OpenAI, –Ω–∞—á–∏–Ω–∞—é—â–∏–π—Å—è —Å "sk-"');
      return;
    }

    if (rememberKey) {
      localStorage.setItem('n8n_openai_api_key', apiKey);
    } else {
      sessionStorage.setItem('n8n_openai_api_key', apiKey);
    }

    setShowApiKeyModal(false);
  };

  const handleTemplateClick = (prompt: string) => {
    setInputValue(prompt);
    textareaRef.current?.focus();
    setSidebarOpen(false); // –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–∞–π–¥–±–∞—Ä –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö
  };

  const formatMessage = (content: string) => {
    // –ó–∞–º–µ–Ω—è–µ–º –±–ª–æ–∫–∏ –∫–æ–¥–∞
    content = content.replace(/```(\w*)\n([\s\S]*?)```/g, (match, lang, code) => {
      return `<div class="code-block" data-language="${lang}">
        <div class="code-header">
          <span class="code-language">${lang}</span>
          <button class="code-copy-btn" type="button">
            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <rect x="9" y="9" width="13" height="13" rx="2" ry="2"></rect>
              <path d="M5 15H4a2 2 0 01-2-2V4a2 2 0 012-2h9a2 2 0 012 2v1"></path>
            </svg>
          </button>
        </div>
        <pre><code>${code.trim()}</code></pre>
      </div>`;
    });

    // –ó–∞–º–µ–Ω—è–µ–º inline –∫–æ–¥
    content = content.replace(/`([^`]+)`/g, '<code class="inline-code">$1</code>');

    // –ó–∞–º–µ–Ω—è–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏
    content = content.replace(/^### (.*$)/gm, '<h4>$1</h4>');
    content = content.replace(/^## (.*$)/gm, '<h3>$1</h3>');
    content = content.replace(/^# (.*$)/gm, '<h2>$1</h2>');

    // –ó–∞–º–µ–Ω—è–µ–º –∂–∏—Ä–Ω—ã–π —Ç–µ–∫—Å—Ç
    content = content.replace(/\*\*(.*?)\*\*/g, '<strong>$1</strong>');

    // –ó–∞–º–µ–Ω—è–µ–º –∫—É—Ä—Å–∏–≤
    content = content.replace(/\*(.*?)\*/g, '<em>$1</em>');

    // –ó–∞–º–µ–Ω—è–µ–º —Å—Å—ã–ª–∫–∏
    content = content.replace(/\[([^\]]+)\]\(([^)]+)\)/g, '<a href="$2" target="_blank" rel="noopener noreferrer">$1</a>');

    // –ó–∞–º–µ–Ω—è–µ–º —Å–ø–∏—Å–∫–∏
    content = content.replace(/^\s*-\s(.*$)/gm, '<li>$1</li>');
    content = content.replace(/(<li>.*<\/li>)\s*\n\s*(?!<li>)/g, '<ul>$1</ul>');

    // –ó–∞–º–µ–Ω—è–µ–º –Ω—É–º–µ—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–ø–∏—Å–∫–∏
    content = content.replace(/^\s*\d+\.\s(.*$)/gm, '<li>$1</li>');
    content = content.replace(/(<li>.*<\/li>)\s*\n\s*(?!<li>)/g, '<ol>$1</ol>');

    // –ó–∞–º–µ–Ω—è–µ–º –ø–µ—Ä–µ–Ω–æ—Å—ã —Å—Ç—Ä–æ–∫ –Ω–∞ –ø–∞—Ä–∞–≥—Ä–∞—Ñ—ã
    const paragraphs = content.split(/\n\s*\n/);
    content = paragraphs.map(p => {
      if (!p.startsWith('<h') && !p.startsWith('<ul') && !p.startsWith('<ol') && !p.startsWith('<div class="code-block"')) {
        return `<p>${p.replace(/\n/g, '<br>')}</p>`;
      }
      return p;
    }).join('');

    return content;
  };

  const sendMessage = async () => {
    if (!inputValue.trim() || isLoading) return;

    const currentApiKey = apiKey || localStorage.getItem('n8n_openai_api_key') || sessionStorage.getItem('n8n_openai_api_key');
    if (!currentApiKey) {
      setShowApiKeyModal(true);
      return;
    }

    const userMessage: Message = {
      id: Date.now().toString(),
      role: 'user',
      content: inputValue,
      timestamp: new Date().toISOString()
    };

    setMessages(prev => [...prev, userMessage]);
    setInputValue('');
    setIsLoading(true);

    try {
      const response = await fetch('https://api.openai.com/v1/chat/completions', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'Authorization': `Bearer ${currentApiKey}`
        },
        body: JSON.stringify({
          model: 'gpt-4-1106-preview',
          messages: [
            { role: 'system', content: systemPrompt },
            ...messages.filter(m => m.role !== 'system').map(m => ({
              role: m.role,
              content: m.content
            })),
            { role: 'user', content: inputValue }
          ],
          temperature: 0.7,
          max_tokens: 4000
        })
      });

      if (!response.ok) {
        const errorData = await response.json().catch(() => ({}));
        throw new Error(errorData.error?.message || `API error: ${response.status}`);
      }

      const data = await response.json();
      const assistantMessage: Message = {
        id: (Date.now() + 1).toString(),
        role: 'assistant',
        content: data.choices[0].message.content,
        timestamp: new Date().toISOString()
      };

      setMessages(prev => [...prev, assistantMessage]);
    } catch (error) {
      console.error('Error:', error);
      let errorMessage = '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –æ—Ç–≤–µ—Ç–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.';
      
      if (error instanceof Error && error.message.includes('API key')) {
        errorMessage = '–ù–µ–≤–µ—Ä–Ω—ã–π API –∫–ª—é—á OpenAI. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–∞—à –∫–ª—é—á –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.';
        localStorage.removeItem('n8n_openai_api_key');
        sessionStorage.removeItem('n8n_openai_api_key');
        setTimeout(() => setShowApiKeyModal(true), 1000);
      }

      const errorMsg: Message = {
        id: (Date.now() + 1).toString(),
        role: 'assistant',
        content: errorMessage,
        timestamp: new Date().toISOString()
      };

      setMessages(prev => [...prev, errorMsg]);
    } finally {
      setIsLoading(false);
    }
  };

  const handleKeyDown = (e: React.KeyboardEvent) => {
    if (e.key === 'Enter' && !e.shiftKey) {
      e.preventDefault();
      sendMessage();
    }
  };

  // FAQ –¥–ª—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
  const faqItems = [
    {
      question: "–ß—Ç–æ —Ç–∞–∫–æ–µ n8n Assistant?",
      answer: "n8n Assistant ‚Äî —ç—Ç–æ —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π AI-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –¥–ª—è n8n, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–≥–∞–µ—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å, –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∏ –æ—Ç–ª–∞–∂–∏–≤–∞—Ç—å —Ä–∞–±–æ—á–∏–µ –ø—Ä–æ—Ü–µ—Å—Å—ã –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏. –û–Ω –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç —Ç–æ—á–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ —É–∑–ª–æ–≤, –ø—Ä–∏–º–µ—Ä—ã –∫–æ–¥–∞ –∏ –≥–æ—Ç–æ–≤—ã–µ —Ä–µ—à–µ–Ω–∏—è –¥–ª—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∑–∞–¥–∞—á –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏."
    },
    {
      question: "–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å n8n Assistant?",
      answer: "–ü—Ä–æ—Å—Ç–æ –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å –æ n8n –≤ –ø–æ–ª–µ –≤–≤–æ–¥–∞ –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –≥–æ—Ç–æ–≤—ã—Ö —à–∞–±–ª–æ–Ω–æ–≤ –∑–∞–ø—Ä–æ—Å–æ–≤. n8n Assistant –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç –ø–æ–¥—Ä–æ–±–Ω—ã–π –æ—Ç–≤–µ—Ç —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏, –ø—Ä–∏–º–µ—Ä–∞–º–∏ –∫–æ–¥–∞ –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏ –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ workflow."
    },
    {
      question: "–ù—É–∂–µ–Ω –ª–∏ API –∫–ª—é—á –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è n8n Assistant?",
      answer: "–î–∞, –¥–ª—è —Ä–∞–±–æ—Ç—ã n8n Assistant —Ç—Ä–µ–±—É–µ—Ç—Å—è API –∫–ª—é—á OpenAI. –ö–ª—é—á —Ö—Ä–∞–Ω–∏—Ç—Å—è —Ç–æ–ª—å–∫–æ –≤ –≤–∞—à–µ–º –±—Ä–∞—É–∑–µ—Ä–µ –∏ –Ω–µ –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è –Ω–∞ –Ω–∞—à —Å–µ—Ä–≤–µ—Ä. –í—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –∫–ª—é—á –Ω–∞ —Å–∞–π—Ç–µ OpenAI."
    },
    {
      question: "–ö–∞–∫–∏–µ —Ç–∏–ø—ã –≤–æ–ø—Ä–æ—Å–æ–≤ –º–æ–∂–Ω–æ –∑–∞–¥–∞–≤–∞—Ç—å n8n Assistant?",
      answer: "–í—ã –º–æ–∂–µ—Ç–µ –∑–∞–¥–∞–≤–∞—Ç—å –≤–æ–ø—Ä–æ—Å—ã –æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —É–∑–ª–æ–≤ n8n, —Å–æ–∑–¥–∞–Ω–∏–∏ —Ä–∞–±–æ—á–∏—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –¥–ª—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∑–∞–¥–∞—á, –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –≤–Ω–µ—à–Ω–∏—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ –∏ API, –æ—Ç–ª–∞–¥–∫–µ –∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ workflows, –∞ —Ç–∞–∫–∂–µ –∑–∞–ø—Ä–∞—à–∏–≤–∞—Ç—å –ø—Ä–∏–º–µ—Ä—ã –∫–æ–¥–∞ –¥–ª—è Function –∏ FunctionItem —É–∑–ª–æ–≤."
    }
  ];

  // –°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è FAQ
  const faqSchema = generateFAQSchema(faqItems);

  return (
    <>
      <SEOTags
        title="–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–∞ —Å n8n | AI-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã—Ö workflow"
        description="–°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π AI-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ —Å n8n. –°–æ–∑–¥–∞–≤–∞–π—Ç–µ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–µ workflow –¥–ª—è —Å–±–æ—Ä–∞ –ª–∏–¥–æ–≤, email-–º–∞—Ä–∫–µ—Ç–∏–Ω–≥–∞, –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –∏ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–∏ –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–π —Å –∫–ª–∏–µ–Ω—Ç–∞–º–∏."
        keywords="–∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–∞ —Å n8n, –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã–µ workflow, –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤, –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è —Å–±–æ—Ä–∞ –ª–∏–¥–æ–≤, –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è email-–º–∞—Ä–∫–µ—Ç–∏–Ω–≥–∞, –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–π, –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ —Å n8n, –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç–µ–π, n8n –¥–ª—è –º–∞—Ä–∫–µ—Ç–æ–ª–æ–≥–æ–≤, n8n –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å CRM"
        canonicalUrl="https://aimarkethub.pro/n8n-assistant"
        imageUrl="https://aimarkethub.pro/images/n8n-assistant.jpg"
        structuredData={[faqSchema]}
      >
        <meta name="application-name" content="n8n Assistant" />
        <meta name="apple-mobile-web-app-title" content="n8n Assistant" />
      </SEOTags>

      <div className="min-h-screen bg-gray-50 dark:bg-gray-900 flex flex-col">
        {/* –†–µ–∫–ª–∞–º–Ω—ã–π –±–∞–Ω–Ω–µ—Ä */}
        <AdaptiveAdBlock 
          blockId="R-A-16048264-9" 
          containerId="yandex_rtb_R-A-16048264-9_n8n_assistant" 
          position="main-banner"
          className="mb-0"
        />

        {/* Header */}
        <div className="bg-white dark:bg-gray-800 shadow-sm border-b border-gray-200 dark:border-gray-700">
          <div className="container mx-auto px-4 py-6">
            <div className="flex items-center justify-between">
              <div>
                <h1 className="text-2xl md:text-3xl font-bold text-gray-900 dark:text-white mb-2">
                  –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–∞ —Å n8n
                </h1>
                <p className="text-gray-600 dark:text-gray-300 text-sm md:text-base">
                  AI-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã—Ö –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã—Ö workflow –∏ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
                </p>
              </div>
              
              {/* Mobile menu button */}
              <button
                onClick={() => setSidebarOpen(!sidebarOpen)}
                className="lg:hidden p-2 rounded-lg bg-gray-100 dark:bg-gray-700 text-gray-600 dark:text-gray-300"
              >
                <svg className="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M4 6h16M4 12h16M4 18h16" />
                </svg>
              </button>
            </div>
          </div>
        </div>

        {/* Main Content */}
        <div className="flex-1 flex overflow-hidden">
          {/* Sidebar */}
          <div className={`
            ${sidebarOpen ? 'translate-x-0' : '-translate-x-full lg:translate-x-0'}
            fixed lg:relative inset-y-0 left-0 z-50 w-80 bg-white dark:bg-gray-800 border-r border-gray-200 dark:border-gray-700 
            transform transition-transform duration-300 ease-in-out lg:transform-none
            flex flex-col
          `}>
            {/* Sidebar Header */}
            <div className="p-4 border-b border-gray-200 dark:border-gray-700 lg:hidden">
              <div className="flex items-center justify-between">
                <h2 className="text-lg font-semibold text-gray-900 dark:text-white">–®–∞–±–ª–æ–Ω—ã</h2>
                <button
                  onClick={() => setSidebarOpen(false)}
                  className="p-2 rounded-lg text-gray-500 hover:bg-gray-100 dark:hover:bg-gray-700"
                >
                  <svg className="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M6 18L18 6M6 6l12 12" />
                  </svg>
                </button>
              </div>
            </div>

            {/* Sidebar Content */}
            <div className="flex-1 overflow-y-auto p-4">
              <h3 className="text-lg font-semibold text-gray-800 dark:text-gray-200 mb-4 hidden lg:block">
                –ì–æ—Ç–æ–≤—ã–µ —à–∞–±–ª–æ–Ω—ã –∑–∞–ø—Ä–æ—Å–æ–≤
              </h3>

              {/* Basic Templates */}
              <div className="mb-6">
                <h4 className="text-sm font-medium text-gray-600 dark:text-gray-400 mb-3 uppercase tracking-wide">–û—Å–Ω–æ–≤—ã</h4>
                <div className="space-y-2">
                  {templates.filter(t => t.category === 'basic').map((template, index) => (
                    <button
                      key={index}
                      onClick={() => handleTemplateClick(template.prompt)}
                      className="w-full text-left p-3 text-sm bg-gray-50 dark:bg-gray-700 border border-gray-200 dark:border-gray-600 rounded-lg hover:border-primary-500 hover:bg-primary-50 dark:hover:bg-primary-900/20 transition-all duration-200 group"
                    >
                      <span className="group-hover:text-primary-600 dark:group-hover:text-primary-400">
                        {template.title}
                      </span>
                    </button>
                  ))}
                </div>
              </div>

              {/* Integration Templates */}
              <div className="mb-6">
                <h4 className="text-sm font-medium text-gray-600 dark:text-gray-400 mb-3 uppercase tracking-wide">–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏</h4>
                <div className="space-y-2">
                  {templates.filter(t => t.category === 'integrations').map((template, index) => (
                    <button
                      key={index}
                      onClick={() => handleTemplateClick(template.prompt)}
                      className="w-full text-left p-3 text-sm bg-gray-50 dark:bg-gray-700 border border-gray-200 dark:border-gray-600 rounded-lg hover:border-primary-500 hover:bg-primary-50 dark:hover:bg-primary-900/20 transition-all duration-200 group"
                    >
                      <span className="group-hover:text-primary-600 dark:group-hover:text-primary-400">
                        {template.title}
                      </span>
                    </button>
                  ))}
                </div>
              </div>

              {/* Automation Templates */}
              <div>
                <h4 className="text-sm font-medium text-gray-600 dark:text-gray-400 mb-3 uppercase tracking-wide">–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è</h4>
                <div className="space-y-2">
                  {templates.filter(t => t.category === 'automation').map((template, index) => (
                    <button
                      key={index}
                      onClick={() => handleTemplateClick(template.prompt)}
                      className="w-full text-left p-3 text-sm bg-gray-50 dark:bg-gray-700 border border-gray-200 dark:border-gray-600 rounded-lg hover:border-primary-500 hover:bg-primary-50 dark:hover:bg-primary-900/20 transition-all duration-200 group"
                    >
                      <span className="group-hover:text-primary-600 dark:group-hover:text-primary-400">
                        {template.title}
                      </span>
                    </button>
                  ))}
                </div>
              </div>

            </div>
          </div>

          {/* Overlay for mobile */}
          {sidebarOpen && (
            <div 
              className="fixed inset-0 bg-black bg-opacity-50 z-40 lg:hidden"
              onClick={() => setSidebarOpen(false)}
            />
          )}

          {/* Chat Area */}
          <div className="flex-1 flex flex-col min-w-0 overflow-hidden">
            {/* Messages Container - Fixed Height */}
            <div 
              ref={chatContainerRef}
              className="flex-1 overflow-y-auto p-4 md:p-6 space-y-4 h-[calc(100vh-280px)]"
            >
              {messages.map((message) => (
                <div
                  key={message.id}
                  className={`flex gap-3 ${message.role === 'user' ? 'justify-end' : 'justify-start'}`}
                >
                  {message.role === 'assistant' && (
                    <div className="w-8 h-8 bg-primary-600 rounded-full flex items-center justify-center flex-shrink-0">
                      <Settings className="h-4 w-4 text-white" />
                    </div>
                  )}
                  
                  <div
                    className={`max-w-[85%] md:max-w-[75%] p-3 md:p-4 rounded-lg ${
                      message.role === 'user'
                        ? 'bg-primary-600 text-white rounded-br-sm'
                        : 'bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100 border border-gray-200 dark:border-gray-600 rounded-bl-sm'
                    }`}
                  >
                    <div
                      className="prose prose-sm max-w-none dark:prose-invert"
                      dangerouslySetInnerHTML={{ __html: formatMessage(message.content) }}
                    />
                  </div>

                  {message.role === 'user' && (
                    <div className="w-8 h-8 bg-gray-600 rounded-full flex items-center justify-center flex-shrink-0 text-white font-medium text-xs">
                      –í—ã
                    </div>
                  )}
                </div>
              ))}

              {isLoading && (
                <div className="flex gap-3 justify-start">
                  <div className="w-8 h-8 bg-primary-600 rounded-full flex items-center justify-center flex-shrink-0">
                    <Settings className="h-4 w-4 text-white" />
                  </div>
                  <div className="bg-white dark:bg-gray-700 border border-gray-200 dark:border-gray-600 p-4 rounded-lg rounded-bl-sm">
                    <div className="flex items-center gap-2">
                      <div className="w-2 h-2 bg-gray-400 rounded-full animate-bounce"></div>
                      <div className="w-2 h-2 bg-gray-400 rounded-full animate-bounce" style={{ animationDelay: '0.2s' }}></div>
                      <div className="w-2 h-2 bg-gray-400 rounded-full animate-bounce" style={{ animationDelay: '0.4s' }}></div>
                    </div>
                  </div>
                </div>
              )}

              <div ref={messagesEndRef} />
            </div>

            {/* Input Area - Fixed at Bottom */}
            <div className="border-t border-gray-200 dark:border-gray-700 bg-white dark:bg-gray-800 p-4">
              <div className="flex gap-3">
                <textarea
                  ref={textareaRef}
                  value={inputValue}
                  onChange={(e) => setInputValue(e.target.value)}
                  onKeyDown={handleKeyDown}
                  placeholder="–û–ø–∏—à–∏—Ç–µ –∑–∞–¥–∞—á—É –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –∏–ª–∏ –∑–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å –æ n8n..."
                  className="flex-1 border border-gray-300 dark:border-gray-600 rounded-lg p-3 resize-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500 dark:bg-gray-700 dark:text-white min-h-[44px] max-h-32"
                  disabled={isLoading}
                  rows={1}
                  style={{ height: 'auto' }}
                  onInput={(e) => {
                    const target = e.target as HTMLTextAreaElement;
                    target.style.height = 'auto';
                    target.style.height = Math.min(target.scrollHeight, 128) + 'px';
                  }}
                />
                <button
                  onClick={sendMessage}
                  disabled={isLoading || !inputValue.trim()}
                  className="w-11 h-11 bg-primary-600 hover:bg-primary-700 disabled:bg-gray-300 disabled:cursor-not-allowed text-white rounded-lg flex items-center justify-center transition-colors duration-200 flex-shrink-0"
                >
                  <Send className="h-4 w-4" />
                </button>
              </div>
              <p className="text-xs text-gray-500 dark:text-gray-400 mt-2 text-center">
                Shift+Enter –¥–ª—è –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏
              </p>

              {/* Status */}
              <div className="flex items-center justify-center gap-2 text-xs text-gray-600 dark:text-gray-400 mt-2">
                <div className="w-2 h-2 bg-green-500 rounded-full"></div>
                <span>n8n Assistant –Ω–∞ —Å–≤—è–∑–∏</span>
              </div>
            </div>
          </div>
          
          {/* Templates Sidebar - Only visible on larger screens */}
          <div className="hidden lg:block w-80 border-l border-gray-200 dark:border-gray-700 overflow-y-auto">
            <div className="p-4">
              <N8nTemplateSearch />
            </div>
          </div>
        </div>

        {/* Features Section */}
        <div className="bg-gray-50 dark:bg-gray-900 border-t border-gray-200 dark:border-gray-700">
          <div className="container mx-auto px-4 py-8">
            <h2 className="text-xl md:text-2xl font-bold text-center text-gray-900 dark:text-white mb-6">
              –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ n8n Assistant
            </h2>
            <div className="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-6 gap-4">
              <div className="text-center p-4">
                <div className="w-10 h-10 bg-primary-100 dark:bg-primary-900/30 rounded-lg flex items-center justify-center mb-3 mx-auto">
                  <Layers className="h-5 w-5 text-primary-600 dark:text-primary-400" />
                </div>
                <h3 className="text-sm font-semibold text-gray-900 dark:text-white mb-1">
                  –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —É–∑–ª–æ–≤
                </h3>
                <p className="text-xs text-gray-600 dark:text-gray-300">
                  –¢–æ—á–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ
                </p>
              </div>

              <div className="text-center p-4">
                <div className="w-10 h-10 bg-primary-100 dark:bg-primary-900/30 rounded-lg flex items-center justify-center mb-3 mx-auto">
                  <GitBranch className="h-5 w-5 text-primary-600 dark:text-primary-400" />
                </div>
                <h3 className="text-sm font-semibold text-gray-900 dark:text-white mb-1">
                  –ì–æ—Ç–æ–≤—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã
                </h3>
                <p className="text-xs text-gray-600 dark:text-gray-300">
                  –ü–æ–ª–Ω—ã–µ workflow –¥–ª—è –∑–∞–¥–∞—á
                </p>
              </div>

              <div className="text-center p-4">
                <div className="w-10 h-10 bg-primary-100 dark:bg-primary-900/30 rounded-lg flex items-center justify-center mb-3 mx-auto">
                  <Code className="h-5 w-5 text-primary-600 dark:text-primary-400" />
                </div>
                <h3 className="text-sm font-semibold text-gray-900 dark:text-white mb-1">
                  –ü—Ä–∏–º–µ—Ä—ã –∫–æ–¥–∞
                </h3>
                <p className="text-xs text-gray-600 dark:text-gray-300">
                  JavaScript –¥–ª—è Function —É–∑–ª–æ–≤
                </p>
              </div>

              <div className="text-center p-4">
                <div className="w-10 h-10 bg-primary-100 dark:bg-primary-900/30 rounded-lg flex items-center justify-center mb-3 mx-auto">
                  <HelpCircle className="h-5 w-5 text-primary-600 dark:text-primary-400" />
                </div>
                <h3 className="text-sm font-semibold text-gray-900 dark:text-white mb-1">
                  –û—Ç–ª–∞–¥–∫–∞
                </h3>
                <p className="text-xs text-gray-600 dark:text-gray-300">
                  –†–µ—à–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º workflow
                </p>
              </div>

              <div className="text-center p-4">
                <div className="w-10 h-10 bg-primary-100 dark:bg-primary-900/30 rounded-lg flex items-center justify-center mb-3 mx-auto">
                  <Zap className="h-5 w-5 text-primary-600 dark:text-primary-400" />
                </div>
                <h3 className="text-sm font-semibold text-gray-900 dark:text-white mb-1">
                  –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏
                </h3>
                <p className="text-xs text-gray-600 dark:text-gray-300">
                  –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–∏—Å–∞–º
                </p>
              </div>

              <div className="text-center p-4">
                <div className="w-10 h-10 bg-primary-100 dark:bg-primary-900/30 rounded-lg flex items-center justify-center mb-3 mx-auto">
                  <Check className="h-5 w-5 text-primary-600 dark:text-primary-400" />
                </div>
                <h3 className="text-sm font-semibold text-gray-900 dark:text-white mb-1">
                  –õ—É—á—à–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏
                </h3>
                <p className="text-xs text-gray-600 dark:text-gray-300">
                  –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ —ç–∫—Å–ø–µ—Ä—Ç–æ–≤
                </p>
              </div>
            </div>
          </div>
        </div>

        {/* API Key Modal */}
        {showApiKeyModal && (
          <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4">
            <div className="bg-white dark:bg-gray-800 rounded-xl p-6 w-full max-w-md">
              <h3 className="text-lg font-semibold text-gray-900 dark:text-white mb-4">
                –í–≤–µ–¥–∏—Ç–µ –≤–∞—à API –∫–ª—é—á OpenAI
              </h3>
              <p className="text-gray-600 dark:text-gray-300 mb-4 text-sm">
                –î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è n8n Assistant —Ç—Ä–µ–±—É–µ—Ç—Å—è –≤–∞—à OpenAI API –∫–ª—é—á. 
                –ö–ª—é—á —Ö—Ä–∞–Ω–∏—Ç—Å—è —Ç–æ–ª—å–∫–æ –≤ –≤–∞—à–µ–º –±—Ä–∞—É–∑–µ—Ä–µ –∏ –Ω–µ –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è –Ω–∞ –Ω–∞—à —Å–µ—Ä–≤–µ—Ä.
              </p>
              <input
                type="password"
                value={apiKey}
                onChange={(e) => setApiKey(e.target.value)}
                placeholder="sk-..."
                className="w-full p-3 border border-gray-300 dark:border-gray-600 rounded-lg mb-4 focus:ring-2 focus:ring-primary-500 focus:border-primary-500 dark:bg-gray-700 dark:text-white"
              />
              <p className="text-sm text-gray-500 dark:text-gray-400 mb-4">
                –í–∞—à API –∫–ª—é—á –¥–æ–ª–∂–µ–Ω –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å "sk-". –í—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –∫–ª—é—á –Ω–∞{' '}
                <a 
                  href="https://platform.openai.com/api-keys" 
                  target="_blank" 
                  rel="noopener noreferrer"
                  className="text-primary-600 hover:text-primary-700"
                >
                  —Å–∞–π—Ç–µ OpenAI
                </a>.
              </p>
              <label className="flex items-center gap-2 mb-4">
                <input
                  type="checkbox"
                  checked={rememberKey}
                  onChange={(e) => setRememberKey(e.target.checked)}
                  className="rounded"
                />
                <span className="text-sm text-gray-600 dark:text-gray-300">
                  –ó–∞–ø–æ–º–Ω–∏—Ç—å –º–æ–π API –∫–ª—é—á –Ω–∞ —ç—Ç–æ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ
                </span>
              </label>
              <button
                onClick={handleApiKeySave}
                className="w-full bg-primary-600 hover:bg-primary-700 text-white font-medium py-3 px-4 rounded-lg transition-colors duration-200"
              >
                –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å
              </button>
            </div>
          </div>
        )}
      </div>

      {/* Templates Section for Mobile - Shown below chat on mobile */}
      <div className="lg:hidden mt-8 container mx-auto px-4">
        <N8nTemplateSearch className="mb-8" />
      </div>

      <style jsx>{`
        .prose .code-block {
          background-color: #1e293b;
          color: #e2e8f0;
          padding: 1rem;
          border-radius: 0.5rem;
          position: relative;
          margin: 1rem 0;
          font-family: 'Fira Code', 'Courier New', monospace;
          font-size: 0.875rem;
          overflow-x: auto;
        }

        .prose .code-header {
          display: flex;
          justify-content: space-between;
          align-items: center;
          margin-bottom: 0.5rem;
          padding-bottom: 0.5rem;
          border-bottom: 1px solid #374151;
        }

        .prose .code-language {
          font-size: 0.75rem;
          color: #9ca3af;
          text-transform: uppercase;
        }

        .prose .code-copy-btn {
          background-color: rgba(255, 255, 255, 0.1);
          color: #cbd5e1;
          border: none;
          border-radius: 0.25rem;
          width: 28px;
          height: 28px;
          display: flex;
          align-items: center;
          justify-content: center;
          cursor: pointer;
          transition: background-color 0.2s;
        }

        .prose .code-copy-btn:hover {
          background-color: rgba(255, 255, 255, 0.2);
        }

        .prose .inline-code {
          background-color: rgba(0, 0, 0, 0.07);
          padding: 0.125rem 0.25rem;
          border-radius: 3px;
          font-family: 'Fira Code', 'Courier New', monospace;
          font-size: 0.875em;
        }

        .dark .prose .inline-code {
          background-color: rgba(255, 255, 255, 0.1);
        }

        .prose h2, .prose h3, .prose h4 {
          margin-top: 1.5rem;
          margin-bottom: 0.75rem;
          font-weight: 600;
          line-height: 1.25;
        }

        .prose h2 {
          font-size: 1.25rem;
          border-bottom: 1px solid #e5e7eb;
          padding-bottom: 0.25rem;
        }

        .dark .prose h2 {
          border-bottom-color: #374151;
        }

        .prose h3 {
          font-size: 1.125rem;
        }

        .prose ul, .prose ol {
          margin: 0.5rem 0 0.5rem 1.5rem;
        }

        .prose ul li, .prose ol li {
          margin-bottom: 0.25rem;
        }

        .prose a {
          color: #7c3aed;
          text-decoration: underline;
          text-underline-offset: 2px;
        }

        .dark .prose a {
          color: #a78bfa;
        }

        .prose strong {
          font-weight: 600;
        }

        .prose em {
          font-style: italic;
        }
      `}</style>
    </>
  );
};

export default N8nAssistantPage;